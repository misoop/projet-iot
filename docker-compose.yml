version: "3"
services:
  strapi:
    container_name: strapi
    image: arthurescriou/strapi:1.0.0
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: development
    ports:
      - "1337:1337"
    networks:
      - strapi-app
    depends_on:
      - strapiDB
    restart: unless-stopped

  strapiDB:
    container_name: strapiDB
    env_file: .env
    image: arthurescriou/strapi-pg:1.0.0
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    networks:
      - strapi-app
    restart: unless-stopped

  strapi-frontend:
    container_name: strapi-frontend
    build:
      context: ./opsci-strapi-frontend
      dockerfile: Dockerfile
    ports:
      - "5174:5174"
    depends_on:
      - strapi
    restart: unless-stopped
  
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - '2181:2181'
    expose:
      - '2181'
    networks:
      - strapi-app

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9093,OUTSIDE://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKAJS_NO_PARTITIONER_WARNING: '1'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_NO_LISTENER_AUTHENTICATION_PLAINTEXT: 'true'
      KAFKA_NO_LISTENER_AUTHENTICATION_SSL: 'true'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_DIRS: /kafka/logs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - strapi-app
  
  product-consumer:
    container_name: product-consumer
    image: arthurescriou/product-consumer:1.0.3
    env_file: .env
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: product
      BEGINNING: ${BEGINNING}
      ERROR_TOPIC: ${ERROR_TOPIC}
    depends_on:
      - kafka
    networks:
      - strapi-app
  
  product-producer:
    container_name: product-producer
    image: arthurescriou/product-producer:1.0.0
    env_file: .env
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: product
      ERROR_TOPIC: ${ERROR_TOPIC}
      FILE_NAME: products.csv
    volumes:
      - /Users/michellesong/Desktop/Projet-OPSCI/projet-dataops-v2/products.csv:/products.csv
    depends_on:
      - product-consumer
    networks:
      - strapi-app

  event-consumer:
    container_name: event-consumer
    image: arthurescriou/event-consumer:1.0.0
    env_file: .env
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: event
      BEGINNING: ${BEGINNING}
      ERROR_TOPIC: ${ERROR_TOPIC}
    depends_on:
      - kafka
    networks:
      - strapi-app
  
  event-producer:
    container_name: event-producer
    image: arthurescriou/event-producer:1.0.3
    env_file: .env
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      TOPIC: event
      FILE_NAME: events.csv
    volumes:
      - /Users/michellesong/Desktop/Projet-OPSCI/projet-dataops-v2/events.csv:/events.csv
    depends_on:
      - event-consumer
    networks:
      - strapi-app
  
  stock-consumer:
    container_name: stock-consumer
    image: arthurescriou/stock-consumer:1.0.2
    env_file: .env
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: stock
      BEGINNING: ${BEGINNING}
      ERROR_TOPIC: ${ERROR_TOPIC}
    depends_on:
      - kafka
    networks:
      - strapi-app
    restart: unless-stopped
  
  stock-producer:
    container_name: stock-producer
    image: arthurescriou/stock-producer:1.0.1
    env_file: .env
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      TOPIC: stock
      FILE_NAME: stocks.csv
    volumes:
      - /Users/michellesong/Desktop/Projet-OPSCI/projet-dataops-v2/stocks.csv:/stocks.csv
    depends_on:
      - stock-consumer
    networks:
      - strapi-app

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - /Users/michellesong/Desktop/Projet-OPSCI/projet-dataops-v2/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - strapi-app
  
  connector:
    container_name: connector
    image: arthurescriou/mqtt-kafka-connector:1.0.0
    env_file: .env
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      MQTT_TOPIC: ${MQTT_TOPIC}
      MQTT_ENDPOINT: ${MQTT_ENDPOINT}
    depends_on:
      - kafka
      - mqtt
    networks:
      - strapi-app

networks:
  strapi-app:
    driver: bridge